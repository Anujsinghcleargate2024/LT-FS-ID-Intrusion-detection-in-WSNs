# -*- coding: utf-8 -*-
"""KM039_breast cancer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1px2AlQmourRlMGmJFwm33QqA7YzXXZUP
"""

import pandas as pd

df=pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer/breast-cancer.data', 
               header=None, na_values='?')

df.head()

df.isnull().sum()

from sklearn.impute import SimpleImputer
si=SimpleImputer(strategy='most_frequent')
df_im=si.fit_transform(df)
df_im=pd.DataFrame(df_im)

df_im.isnull().sum()

df_im.shape

cols=[0,1,2,3,4,5,7,8,9]
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
for i in cols:
  df_im[i]=le.fit_transform(df_im[i])
df_im.head()

df_im.describe()

target=df_im[0]

target.shape

data=df_im.drop(columns=[0])

data.shape

data.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(data, target, test_size=0.25)

x_train.shape

x_test.shape

from sklearn.linear_model import Perceptron

p=Perceptron(penalty='l2')

p.fit(x_train,y_train)

from sklearn.metrics import accuracy_score

p_train_pred=p.predict(x_train)

p_test_pred=p.predict(x_test)

print("Training accuracy: ", accuracy_score(p_train_pred, y_train))

print('Testing accuracy: ', accuracy_score(p_test_pred, y_test))

from sklearn.linear_model import LogisticRegression

lr=LogisticRegression()

lr.fit(x_train, y_train)

lr_train_pred=lr.predict(x_train)

lr_test_pred=lr.predict(x_test)

print("Training accuracy: ", accuracy_score(lr_train_pred,y_train))

print("Testing accuracy: ", accuracy_score(lr_test_pred, y_test))

from sklearn.tree import DecisionTreeClassifier

dt_id=DecisionTreeClassifier(criterion='entropy', max_depth=8)

dt_id.fit(x_train, y_train)

dt_train_pred=dt_id.predict(x_train)
dt_test_pred=dt_id.predict(x_test)

print("training accuracy: ",accuracy_score(dt_train_pred,y_train))

print("testing accuracy: ", accuracy_score(dt_test_pred, y_test))

from sklearn.tree import plot_tree

plot_tree(dt_id)

